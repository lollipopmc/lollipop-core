on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DEEPSOURCE_CLI_VERSION: 0.8.6
  GOLANG_VERSION: 1.21

jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-13, macos-14, windows-2022]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Prepare Rust Toolchain
        run: |
          rustup update stable
          cargo +stable install cargo-llvm-cov
      - name: Checkout Code
        uses: actions/checkout@v4
        if: ${{ github.event_name != 'pull_request' }}
      - name: Checkout Pull Request Code
        uses: actions/checkout@v4
        if: ${{ github.event_name == 'pull_request' }}
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Download DeepSource CLI
        if: ${{ matrix.os != 'windows-2022'}}
        run: curl -sSL https://deepsource.io/cli | sh -s -- v${{ env.DEEPSOURCE_CLI_VERSION }}
      - name: Download DeepSource CLI (Windows)
        if: ${{ matrix.os == 'windows-2022'}}
        run: |
          $DOWNLOAD_URL="https://github.com/DeepSourceCorp/cli/releases/download/v${{ env.DEEPSOURCE_CLI_VERSION }}/deepsource_${{ env.DEEPSOURCE_CLI_VERSION }}_windows_x86_64.tar.gz"
          Invoke-WebRequest -Uri $DOWNLOAD_URL -OutFile deepsource.tar.gz
          7z x .\deepsource.tar.gz
          7z x .\deepsource.tar -obin
      - name: Build
        run: cargo +stable build --verbose
      - name: Test
        run: cargo +stable test --verbose
      - name: Check Coverage
        run: cargo +stable llvm-cov --lcov --output-path coverage.info
      - name: Upload Coverage
        run: ./bin/deepsource report --analyzer test-coverage --key rust --value-file coverage.info
        env:
          DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}
